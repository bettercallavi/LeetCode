//https://leetcode.com/problems/jump-game-ii/description/
//https://www.youtube.com/watch?v=a9r98S-pDvk

    class Solution {
        public int jump(int[] nums) {
            int answer = 0, n = nums.length;
            int curEnd = 0, curFar = 0;
            
            for (int i = 0; i < n - 1; ++i) {
                curFar = Math.max(curFar, i + nums[i]); //checking all combination before prv jump point
                if (i == curEnd) { //i checked above all combination before jumping again
                    answer++;
                    curEnd = curFar;
                }
            }
            
            return answer;
        }
    }
