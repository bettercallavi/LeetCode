//https://leetcode.com/problems/jump-game-ii/description/
//https://www.youtube.com/watch?v=a9r98S-pDvk
//https://leetcode.com/problems/jump-game/description/
//solution is same as jump game 1

class Solution {
    public int jump(int[] a) {
        int n=a.length;
        int nextJump=0;
        int prvJump=0;
        int count=0;
        for(int i=0;i<n-1;i++){
          nextJump=Math.max(nextJump,i+a[i]);//checking all combination before next jump 
          if(i==prvJump){ ////i checked above all combination before jumping again
              prvJump=nextJump;
              count++;
          }
        }
      return count;
    }
}
