//https://leetcode.com/problems/unique-paths-ii/description/?envType=study-plan-v2&envId=top-interview-150
class Solution {
    public int uniquePathsWithObstacles(int[][] a) {
        int m=a.length;
        int n=a[0].length;
        for(int i=0;i<m;i++){
           for(int j=0;j<n;j++){
            if(a[i][j]==1)   
           a[i][j]=-1;
        } 
        }
        // System.out.println(Arrays.toString(a[0]));
        for(int i=0;i<m;i++){
            if(a[i][0]!=-1)
             a[i][0]=1;
             else break;
        }
       for(int i=0;i<n;i++){
            if(a[0][i]!=-1)
             a[0][i]=1;
             else break;
        }
    //  System.out.println(Arrays.toString(a[2]));
         for(int i=1;i<m;i++){
           for(int j=1;j<n;j++){
            if(a[i][j]==-1)
            continue;  
          if(a[i-1][j]!=-1 && a[i][j-1]==-1)   
           a[i][j]+=a[i-1][j];
           if(a[i][j-1]!=-1 && a[i-1][j]==-1)   
           a[i][j]+=a[i][j-1];
           else if(a[i-1][j]!=-1 && a[i][j-1]!=-1){
              a[i][j]+=a[i][j-1]+a[i-1][j];  
           }
        } 
        }
    // System.out.println(Arrays.toString(a[1]));   
    return a[m-1][n-1]==-1? 0:a[m-1][n-1];
   }
}
