//https://leetcode.com/problems/combination-sum-iii/description/?envType=study-plan-v2&envId=leetcode-75

class Solution {
    List<List<Integer>> ans;
    public List<List<Integer>> combinationSum3(int k, int n) {
        ans=new ArrayList<>();
        backtrack(k,n,1,0,new ArrayList<>());
        return ans;
    }
    void backtrack(int k, int sum,int i,int tempSum,List<Integer> list){

       if(list.size()==k && tempSum==sum){
          ans.add(new ArrayList<>(list));
          return;
       }
         for(int j=i;j<10;j++){
            list.add(j);
            backtrack(k,sum,j+1,tempSum+j,list);
            list.remove(list.size()-1);
         }
    }
}
