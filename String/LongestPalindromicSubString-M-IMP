//https://leetcode.com/problems/longest-palindromic-substring/

class Solution {
    public String longestPalindrome(String s) {
    int start=0;
    int end=0;
        if(s==null || s.length()<1)return "";
        for(int i=0;i<s.length();i++){

  //palindrome can be even length or odd length,from each index of string we need to check if it is middle of pelindrome     
         int l1=findSubString(s,i,i);    //odd palindrome check 
         int l2=findSubString(s,i,i+1);  //even palindrome check 
          int l=Math.max(l1,l2);
            if(l>end-start){
             start=i-(l-1)/2;
             end=start+l-1;
            }
        }
      return s.substring(start,end+1);  
    }
    
    int findSubString(String s,int i,int j){
    while(i>=0 && j<s.length() && s.charAt(i)==s.charAt(j)){
        i--;
        j++;
    }   
        //i and j will always come increased by 2 due to last run so minus 1 is needed 
        return j-i-1;
  }
}
