//https://leetcode.com/problems/longest-substring-without-repeating-characters/


## not good ,brute force ,if found repeating break loop 

class Solution {
    int ans=0;
    public int lengthOfLongestSubstring(String s) {
        for(int i=0;i<s.length();i++){
              String temp="";
            for(int j=i;j<s.length();j++){
                if(temp.indexOf(s.charAt(j))!=-1){
                //System.out.println(temp);
                
                break;
                }
                else{
                 temp+=s.charAt(j);
                }
                ans=Math.max(ans,temp.length());
          }
     }
       return ans;
    }
}

// example---abbcda ,ans bcda 
class Solution {
    public int lengthOfLongestSubstring(String s) {
        Map<Character,Integer> map=new HashMap<>();
      int count=0;
      int i=0;
      for(int j=0;j<s.length();j++){
        if(map.containsKey(s.charAt(j))){
          i=Math.max(i,map.get(s.charAt(j)));
          // System.out.println(i);
        }
        count=Math.max(count,j-i+1);
        map.put(s.charAt(j),j+1);
      }
      return count;
    }
}
