//https://leetcode.com/problems/koko-eating-bananas/description/?envType=study-plan-v2&envId=leetcode-75
//find maximum value in piles ,minimum we will start k=1 ,we will use binary search fo find answer
//given piles.length <= h 
class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int s=1;
        int e=Integer.MIN_VALUE;
        for(int i=0;i<piles.length;i++){
            e=Math.max(e,piles[i]);
        }
        while(s<e){
            int mid=s+(e-s)/2;
            if(isPossible(mid,piles,h)){
                e=mid;
            }
            else
            s=mid+1;
        }
        return s;
    }
    public boolean isPossible(int maxpiles,int[] piles,int h){
        int hours=0;
        for(int i:piles){
            hours+=Math.ceil((double)i/(double)maxpiles);
        }
        if(hours<=h)
            return true;
        return false;
    }
}
