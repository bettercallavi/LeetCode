//https://leetcode.com/problems/linked-list-cycle-ii/
//https://www.youtube.com/watch?v=_BG9rjkAXj8

public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode slow=head;
        ListNode fast=head;
         if (head == null || head.next == null) 
            return null;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
            if(slow==fast)
            break;
        }
        //inrease one from start and one from point where slow fast was same ,they will meet at cycle start point 
       ListNode temp =head;
        while(slow!=null){
            if(slow==temp)
            return slow;
            slow=slow.next;
            temp=temp.next;
        }
        return null;
    }
}
